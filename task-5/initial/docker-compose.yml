services:
  postgresdb:
    image: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: productsdb
    ports:
      - "5433:5432"
    volumes:
      - ./db-init:/docker-entrypoint-initdb.d:ro

  opensearch:
    image: 'opensearchproject/opensearch:2.13.0'
    container_name: 'opensearch'
    restart: 'unless-stopped'
    ports:
      - '9200:9200'
      - '9600:9600'
    environment:
      - 'discovery.type=single-node'
      - 'plugins.security.disabled=true'
      - 'OPENSEARCH_INITIAL_ADMIN_PASSWORD=Sup3r$$trongP@ssw0rd_2025!'
      - 'OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m'
    healthcheck:
      test: 'curl -f http://localhost:9200 || exit 1'

  # logstash removed; filebeat ships directly to OpenSearch

  opensearch-dashboards:
    image: 'opensearchproject/opensearch-dashboards:2.13.0'
    container_name: 'opensearch-dashboards'
    restart: 'unless-stopped'
    ports:
      - '5601:5601'
    environment:
      - 'OPENSEARCH_HOSTS=["http://opensearch:9200"]'
      - 'DISABLE_SECURITY_DASHBOARDS_PLUGIN=true'
      - 'OPENSEARCH_USERNAME=admin'
      - 'OPENSEARCH_PASSWORD=Sup3r$$trongP@ssw0rd_2025!'
    depends_on:
      - 'opensearch'

  fluent-bit:
    image: 'fluent/fluent-bit:2.1.9'
    container_name: 'fluent-bit'
    restart: 'unless-stopped'
    volumes:
      - './fluent-bit/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf:ro'
      - '/var/lib/docker/containers:/var/lib/docker/containers:ro'
      - '/var/run/docker.sock:/var/run/docker.sock'
    depends_on:
      - 'opensearch'

  prometheus:
    image: 'prom/prometheus:v3.4.0'
    container_name: 'prometheus'
    restart: 'unless-stopped'
    volumes:
      - './prometheus/prometheus.yml:/etc/prometheus/prometheus.yml'
      - './prometheus/alerts.yml:/etc/prometheus/alerts.yml'
    ports:
      - '9090:9090'
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "9090" ]

  grafana:
    image: 'grafana/grafana:12.0.1'
    container_name: 'grafana'
    restart: 'unless-stopped'
    ports:
      - '3000:3000'
    environment:
      - 'GF_USERS_ALLOW_SIGN_UP=false'
    volumes:
      - './grafana/provisioning:/etc/grafana/provisioning'
    depends_on:
      - 'prometheus'
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "3000" ]

  app:
    depends_on:
      - postgresdb
    image: batch-processing
    build:
      context: .
      dockerfile: ./Dockerfile
    restart: no
    ports:
      - "8080:8080"